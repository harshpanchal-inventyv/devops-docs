#& Concept for how to access x steps output into another y step we can use id and github actions context

#~ Content
# 1) Concept of If expressions
# 2) Concept of outputs which helps to share important variables between multiple jobs
# 3) 
# 


name: Generate random failure
on: push
jobs:
#? This is how we can give permission to packages in gtihub actions
permission:
  packages: write

  randomly-failing-job:

# This outputs are the variables which are availabel between multiple jobs
    outputs: 
      output1: ${{ steps.step1.output.test }}
      output2: ${{ steps.step1.output.test }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate 0 or 1
        id: generate_number
        run:  echo "random_number=$(($RANDOM % 2))" >> $GITHUB_OUTPUT
      - name: Pass or fail
        run: |
          if [[ ${{ steps.generate_number.outputs.random_number }} == 0 ]]; then exit 0; else exit 1; fi
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  
# This is how we can use the variables from one job to another & store it inside the variable 
  job2:
    runs-on: ubuntu-latest
    needs: randomly-failing-job
    steps:
      - env:
          OUTPUT1: ${{ needs.randomly-failing-job.outputs.output1 }}
          OUTPUT2: ${{ needs.randomly-failing-job.outputs.output2 }}
      
  